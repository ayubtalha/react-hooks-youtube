{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fahad Khan\\\\workspace\\\\videos-hooks\\\\src\\\\components\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport SearchBar from \"./SearchBar\";\nimport youtube from \"../apis/youtube\";\nimport VideoList from \"./VideoList\";\nimport VideoDetail from \"./VideoDetail\";\nconst KEY = \"AIzaSyBkGrz-7ITMbdVDSxDy8mvOekvFu1DVwPk\";\n\nconst App = () => {\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  useEffect(() => {\n    onTermSubmit(\"barcelona\");\n  }, []); // only one time renders\n\n  const onTermSubmit = async term => {\n    const response = await youtube.get(\"/search\", {\n      params: {\n        q: term,\n        part: \"snippet\",\n        maxResults: 5,\n        type: \"video\",\n        key: KEY\n      }\n    });\n    setVideos(response.data.items);\n    setSelectedVideo(response.data.items[0]);\n  };\n\n  const onVideoSelect = video => {\n    //video in function is passed\n    //from VideoItem.js and it is a callback function\n    //whenever user select the specific vido in VideoList\n    console.log(video);\n    setSelectedVideo(video);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    onFormSubmit: onTermSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"eleven wide column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(VideoDetail, {\n    video: selectedVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"five wide column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(VideoList, {\n    onVideoSelect: onVideoSelect //callback from VideoItem\n    ,\n    videos: videos //props for VideoList\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Fahad Khan/workspace/videos-hooks/src/components/App.js"],"names":["React","useState","useEffect","SearchBar","youtube","VideoList","VideoDetail","KEY","App","videos","setVideos","selectedVideo","setSelectedVideo","onTermSubmit","term","response","get","params","q","part","maxResults","type","key","data","items","onVideoSelect","video","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,MAAMC,GAAG,GAAG,yCAAZ;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,IAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,YAAY,CAAC,WAAD,CAAZ;AACD,GAFQ,EAEN,EAFM,CAAT,CAJgB,CAMR;;AAER,QAAMA,YAAY,GAAG,MAAOC,IAAP,IAAgB;AACnC,UAAMC,QAAQ,GAAG,MAAMX,OAAO,CAACY,GAAR,CAAY,SAAZ,EAAuB;AAC5CC,MAAAA,MAAM,EAAE;AACNC,QAAAA,CAAC,EAAEJ,IADG;AAENK,QAAAA,IAAI,EAAE,SAFA;AAGNC,QAAAA,UAAU,EAAE,CAHN;AAINC,QAAAA,IAAI,EAAE,OAJA;AAKNC,QAAAA,GAAG,EAAEf;AALC;AADoC,KAAvB,CAAvB;AAUAG,IAAAA,SAAS,CAACK,QAAQ,CAACQ,IAAT,CAAcC,KAAf,CAAT;AACAZ,IAAAA,gBAAgB,CAACG,QAAQ,CAACQ,IAAT,CAAcC,KAAd,CAAoB,CAApB,CAAD,CAAhB;AACD,GAbD;;AAeA,QAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B;AACA;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAd,IAAAA,gBAAgB,CAACc,KAAD,CAAhB;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,YAAY,EAAEb,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEF,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,aAAa,EAAEc,aADjB,CACgC;AADhC;AAEE,IAAA,MAAM,EAAEhB,MAFV,CAEkB;AAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADF,CAHF,CADF;AAoBD,CAnDD;;AAqDA,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport youtube from \"../apis/youtube\";\r\nimport VideoList from \"./VideoList\";\r\nimport VideoDetail from \"./VideoDetail\";\r\n\r\nconst KEY = \"AIzaSyBkGrz-7ITMbdVDSxDy8mvOekvFu1DVwPk\";\r\n\r\nconst App = () => {\r\n  const [videos, setVideos] = useState([]);\r\n  const [selectedVideo, setSelectedVideo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    onTermSubmit(\"barcelona\");\r\n  }, []); // only one time renders\r\n\r\n  const onTermSubmit = async (term) => {\r\n    const response = await youtube.get(\"/search\", {\r\n      params: {\r\n        q: term,\r\n        part: \"snippet\",\r\n        maxResults: 5,\r\n        type: \"video\",\r\n        key: KEY,\r\n      },\r\n    });\r\n\r\n    setVideos(response.data.items);\r\n    setSelectedVideo(response.data.items[0]);\r\n  };\r\n\r\n  const onVideoSelect = (video) => {\r\n    //video in function is passed\r\n    //from VideoItem.js and it is a callback function\r\n    //whenever user select the specific vido in VideoList\r\n    console.log(video);\r\n    setSelectedVideo(video);\r\n  };\r\n\r\n  return (\r\n    <div className=\"ui container\">\r\n      <SearchBar onFormSubmit={onTermSubmit} />\r\n      {/* {this.state.videos.length} videos */}\r\n      <div className=\"ui grid\">\r\n        <div className=\"ui row\">\r\n          <div className=\"eleven wide column\">\r\n            <VideoDetail video={selectedVideo} />\r\n            {/* props for VideoDetail */}\r\n          </div>\r\n          <div className=\"five wide column\">\r\n            <VideoList\r\n              onVideoSelect={onVideoSelect} //callback from VideoItem\r\n              videos={videos} //props for VideoList\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}